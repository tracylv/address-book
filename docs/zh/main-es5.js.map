{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/address-book/address-book.component.html","webpack:///./src/app/components/address-book/address-book.component.ts","webpack:///./src/app/components/cell/cell.component.html","webpack:///./src/app/components/cell/cell.component.ts","webpack:///./src/app/mock-data/address-book.mock.ts","webpack:///./src/app/services/address-book.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<!-- address book -->\n<app-address-book></app-address-book>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'address-book';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AddressBookComponent } from './components/address-book/address-book.component';\nimport { CellComponent } from './components/cell/cell.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddressBookComponent,\n    CellComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"address-book cell-container\">\n  <h2 i18n=\"site header | address book header\">Address Book</h2>\n  <ul>\n    <li>\n      <div class=\"head row\">\n        <span class=\"cell cell-1\"><input #checkedAllInput type=\"checkbox\" [(checked)]=\"isAllChecked\" (change)=\"onCheckAll(checkedAllInput.checked)\"></span>\n        <span class=\"cell cell-1\" (click)=\"orderBy('id')\" i18n>ID</span>\n        <span class=\"cell cell-2\" (click)=\"orderBy('name')\" i18n>Name</span>\n        <span class=\"cell cell-2\" (click)=\"orderBy('location')\" i18n>Location</span>\n        <span class=\"cell cell-2\" (click)=\"orderBy('office')\" i18n>Office</span>\n        <span class=\"cell cell-4 phone-cell-column\">\n          <span class=\"cell cell-12 phone-cell\" i18n>Phone</span>\n          <span class=\"cell cell-6\" (click)=\"orderBy('phone', 'office')\" i18n>Office</span>\n          <span class=\"cell cell-6\" (click)=\"orderBy('phone', 'cell')\" i18n>Cell</span>\n        </span>\n      </div>\n    </li>\n    <li *ngFor=\"let item of addressBooks\" [class.selected]=\"item.checked\">\n      <div class=\"content row\">\n        <span class=\"cell cell-1\"><input type=\"checkbox\" [(checked)]=\"item.checked\" (change)=\"onCheckChange($event, item)\"></span>\n        <span class=\"cell cell-1\">{{ item.id }}</span>\n        <span class=\"cell cell-2\"><app-cell [text]=\"item.name\" [update]=\"updateAddressBook(item, 'name')\"></app-cell></span>\n        <span class=\"cell cell-2\"><app-cell [text]=\"item.location\" [update]=\"updateAddressBook(item, 'location')\"></app-cell></span>\n        <span class=\"cell cell-2\"><app-cell [text]=\"item.office\" [update]=\"updateAddressBook(item, 'office')\"></app-cell></span>\n        <span class=\"cell cell-2\"><app-cell [text]=\"item.phone.office\" [update]=\"updateAddressBook(item, 'phone', 'office')\"></app-cell></span>\n        <span class=\"cell cell-2\"><app-cell [text]=\"item.phone.cell\" [update]=\"updateAddressBook(item, 'phone', 'cell')\"></app-cell></span>\n      </div>\n    </li>\n  </ul>\n  <div class=\"operation-buttons row\">\n    <button (click)=\"deleteAddressBooks()\" class=\"cell cell-2\" i18n>Delete</button>\n    <button (click)=\"addAddressBooks()\" class=\"cell cell-2\" i18n>Add</button>\n    <!-- the update behavior will be done inline, so not add the update button here -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IAddressBook } from '../../models/address-book.model';\nimport { AddressBookService } from '../../services/address-book.service';\n\n@Component({\n  selector: 'app-address-book',\n  templateUrl: './address-book.component.html',\n  styleUrls: ['./address-book.component.scss'],\n  providers: [AddressBookService]\n})\nexport class AddressBookComponent implements OnInit {\n\n  addressBooks: IAddressBook[];\n\n  isAllChecked: boolean;\n\n  constructor(private addressBookService: AddressBookService) { }\n\n  ngOnInit() {\n    this.addressBookService.getAddressBooks().subscribe(addressBooks => {\n      this.addressBooks = addressBooks;\n    });\n  }\n\n  // handle the checkbox toggle logic\n  onCheckChange(event, item: IAddressBook) {\n    item.checked = event.target && event.target.checked;\n\n    this.checkAllValidate();\n  }\n\n  // handle check all logic\n  onCheckAll(checked: boolean) {\n    this.addressBooks.forEach(item => item.checked = checked);\n\n    this.checkAllValidate();\n  }\n\n  checkAllValidate() {\n    // determine isAllCheck value\n    this.isAllChecked = this.addressBooks.every(ad => !!ad.checked);\n  }\n\n  addAddressBooks() {\n    const newAddressBook: IAddressBook = {\n      name: '',\n      location: '',\n      office: '',\n      phone: {\n        office: '',\n        cell: ''\n      }\n    };\n\n    this.addressBookService.addAddressBook(newAddressBook).subscribe((item) => {\n      // fake for now.\n      this.addressBooks.push(item);\n\n      this.checkAllValidate();\n    });\n  }\n\n  // update address book callback\n  updateAddressBook(item: IAddressBook, key1: string, key2?: string) {\n    return (text: string) => {\n      !key2 ? item[key1] = text : item[key1][key2] = text;\n\n      // fake call for server update\n      this.addressBookService.updateAddressBook(item);\n    };\n  }\n\n  deleteAddressBooks() {\n    const deletedIds: string[] = this.addressBooks.filter(item => item.checked).map(item => item.id);\n    this.addressBookService.deleteAddressBooksByIds(deletedIds).subscribe(() => {\n      // fake for now.\n      this.addressBooks = this.addressBooks.filter(item => !item.checked);\n    });\n  }\n\n  orderBy(key1: string, key2?: string) {\n    this.addressBooks.sort((ab1, ab2) => {\n      if (key2) {\n        return ab1[key1][key2] >= ab2[key1][key2] ? 1 : -1;\n      } else {\n        return ab1[key1] >= ab2[key1] ? 1 : -1;\n      }\n    });\n  }\n\n}\n","<span class=\"address-book-cell\">\n  <span  *ngIf=\"!editMode\" (dblclick)=\"enterEditMode()\" >{{ text }}</span>\n  <input *ngIf=\"editMode\" #textInput type=\"text\" [value]=\"text\" (keyup.enter)=\"leaveEditMode(textInput.value)\" (blur)=\"leaveEditMode(textInput.value)\">\n</span>","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-cell',\n  templateUrl: './cell.component.html',\n  styleUrls: ['./cell.component.scss']\n})\nexport class CellComponent implements OnInit {\n  @Input() text: string;     // text string from address book\n\n  @Input() update: (text: string) => void;   // update call back for update address book\n\n  @ViewChild('textInput', {static: false}) textInputElement: ElementRef;\n\n  editMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  enterEditMode() {\n    this.editMode = true;\n\n    // focus on the input automatically\n    setTimeout(() => {\n      this.textInputElement.nativeElement.focus();\n    }, 0);\n\n  }\n\n  leaveEditMode(text: string) {\n    this.editMode = false;\n\n    this.update(text);\n  }\n\n}\n","import { IAddressBook } from '../models/address-book.model';\n\n// mock data for address books\nexport const ADDRESS_BOOKS: IAddressBook[] = [\n  {\n    id: '1',\n    name: 'Tracy Lv',\n    location: 'Shanghai',\n    office: 'C-101',\n    phone: {\n      office: 'x55778',\n      cell: '650-353-1239'\n    }\n  },\n  {\n    id: '2',\n    name: 'Olivia Wang',\n    location: 'Shanghai',\n    office: 'D-202',\n    phone: {\n      office: 'x112233',\n      cell: '650-353-2222'\n    }\n  },\n  {\n    id: '3',\n    name: 'Khali Zhang',\n    location: 'Beijing',\n    office: 'E-303',\n    phone: {\n      office: 'x334455',\n      cell: '650-353-3333'\n    }\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { IAddressBook } from '../models/address-book.model';\nimport { ADDRESS_BOOKS } from '../mock-data/address-book.mock';\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressBookService {\n\n  // fake id, which should create with backend, this is only for demo purpose\n  fakeId = 4;\n\n  // get all address books\n  getAddressBooks(): Observable<IAddressBook[]> {\n    // mock fetching the data from backend\n    return of(ADDRESS_BOOKS);\n  }\n\n  // add address books\n  addAddressBook(item: IAddressBook): Observable<IAddressBook> {\n    // placeholder for interact with backend\n    item.id = (this.fakeId++).toString();\n    return of(item);\n  }\n\n  // update address books\n  updateAddressBook(item: IAddressBook): Observable<IAddressBook> {\n    // placeholder for interact with backend\n    return of(item);\n  }\n\n  // delete address books by ids\n  deleteAddressBooksByIds(ids: string[]): Observable<string[]> {\n    // we can do batch delete here, for now this is just a placeholder where interact with backend\n    return of(ids);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}